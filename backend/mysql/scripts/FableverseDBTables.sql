-- MySQL Script generated by MySQL Workbench
-- Sat May  9 11:41:14 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema fableverse_dev
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema fableverse_dev
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `fableverse_dev` DEFAULT CHARACTER SET utf8 ;
USE `fableverse_dev` ;

-- -----------------------------------------------------
-- Table `fableverse_dev`.`abilities`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `fableverse_dev`.`abilities` ;

CREATE TABLE IF NOT EXISTS `fableverse_dev`.`abilities` (
  `id` INT NOT NULL,
  `servers_id` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  `description` VARCHAR(255) NULL,
  `effects_who` INT NULL,
  `status_effect_id` INT NOT NULL,
  `status_effect_chance` FLOAT(4,4) NULL,
  `damage` INT NULL,
  `magic_damage` INT NULL,
  PRIMARY KEY (`id`, `servers_id`, `status_effect_id`),
  INDEX `fk_classes_servers1_idx` (`servers_id` ASC) VISIBLE,
  INDEX `fk_abilities_status_effect1_idx` (`status_effect_id` ASC) VISIBLE,
  CONSTRAINT `fk_classes_servers10`
    FOREIGN KEY (`servers_id`)
    REFERENCES `fableverse_dev`.`servers` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_abilities_status_effect1`
    FOREIGN KEY (`status_effect_id`)
    REFERENCES `fableverse_dev`.`status_effect` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `fableverse_dev`.`accounts`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `fableverse_dev`.`accounts` ;

CREATE TABLE IF NOT EXISTS `fableverse_dev`.`accounts` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `email` VARCHAR(255) NOT NULL,
  `password` VARCHAR(255) NOT NULL,
  `last_login` DATETIME NULL,
  `created_date` DATETIME NOT NULL,
  `security_level` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE,
  UNIQUE INDEX `user_id_UNIQUE` (`id` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `fableverse_dev`.`ammo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `fableverse_dev`.`ammo` ;

CREATE TABLE IF NOT EXISTS `fableverse_dev`.`ammo` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `servers_id` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `description` VARCHAR(255) NULL,
  `type` VARCHAR(10) NULL,
  `status_effect_chance` FLOAT(4,4) NULL,
  `status_effect_id` INT NOT NULL,
  PRIMARY KEY (`id`, `servers_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `fk_ammo_servers1_idx` (`servers_id` ASC) VISIBLE,
  INDEX `fk_ammo_status_effect1_idx` (`status_effect_id` ASC) VISIBLE,
  CONSTRAINT `fk_ammo_servers1`
    FOREIGN KEY (`servers_id`)
    REFERENCES `fableverse_dev`.`servers` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ammo_status_effect1`
    FOREIGN KEY (`status_effect_id`)
    REFERENCES `fableverse_dev`.`status_effect` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `fableverse_dev`.`armor`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `fableverse_dev`.`armor` ;

CREATE TABLE IF NOT EXISTS `fableverse_dev`.`armor` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `servers_id` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `description` VARCHAR(255) NULL,
  `type` VARCHAR(10) NULL,
  `defense` INT NULL,
  `magic_resistance` INT NULL,
  `weight` INT NULL,
  `status_effect_chance` FLOAT(4,4) NULL,
  `status_effect_id` INT NOT NULL,
  PRIMARY KEY (`id`, `servers_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `fk_armor_servers1_idx` (`servers_id` ASC) VISIBLE,
  INDEX `fk_armor_status_effect1_idx` (`status_effect_id` ASC) VISIBLE,
  CONSTRAINT `fk_armor_servers1`
    FOREIGN KEY (`servers_id`)
    REFERENCES `fableverse_dev`.`servers` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_armor_status_effect1`
    FOREIGN KEY (`status_effect_id`)
    REFERENCES `fableverse_dev`.`status_effect` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `fableverse_dev`.`assets`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `fableverse_dev`.`assets` ;

CREATE TABLE IF NOT EXISTS `fableverse_dev`.`assets` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `servers_id` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  `path` VARCHAR(100) NULL,
  `extension` VARCHAR(5) NOT NULL,
  `type` VARCHAR(10) NOT NULL,
  PRIMARY KEY (`id`, `servers_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  UNIQUE INDEX `path_UNIQUE` (`path` ASC) VISIBLE,
  UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE,
  INDEX `fk_assets_servers1_idx` (`servers_id` ASC) VISIBLE,
  CONSTRAINT `fk_assets_servers1`
    FOREIGN KEY (`servers_id`)
    REFERENCES `fableverse_dev`.`servers` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `fableverse_dev`.`characters`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `fableverse_dev`.`characters` ;

CREATE TABLE IF NOT EXISTS `fableverse_dev`.`characters` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `account_id` INT NOT NULL,
  `servers_id` INT NOT NULL,
  `last_login` DATETIME NULL,
  `created_date` DATETIME NOT NULL,
  `username` VARCHAR(45) NOT NULL,
  `gender` VARCHAR(1) NOT NULL,
  `titles_id` INT NOT NULL,
  `races_id` INT NOT NULL,
  `classes_id` INT NOT NULL,
  `factions_id` INT NOT NULL,
  `money` INT NULL DEFAULT 0,
  `health` INT NULL DEFAULT 10,
  `max_health` INT NULL DEFAULT 10,
  `strength` INT NULL DEFAULT 1,
  `intelligence` INT NULL DEFAULT 1,
  `luck` INT NULL DEFAULT 1,
  `dexterity` INT NULL DEFAULT 1,
  `constitution` INT NULL DEFAULT 1,
  `charisma` INT NULL DEFAULT 1,
  `level` INT NULL DEFAULT 1,
  `experience` INT NULL DEFAULT 0,
  `levels_id` INT NOT NULL,
  PRIMARY KEY (`id`, `account_id`, `servers_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `fk_characters_account1_idx` (`account_id` ASC) VISIBLE,
  INDEX `fk_characters_servers1_idx` (`servers_id` ASC) VISIBLE,
  INDEX `fk_characters_titles1_idx` (`titles_id` ASC) VISIBLE,
  INDEX `fk_characters_races1_idx` (`races_id` ASC) VISIBLE,
  INDEX `fk_characters_classes1_idx` (`classes_id` ASC) VISIBLE,
  INDEX `fk_characters_factions1_idx` (`factions_id` ASC) VISIBLE,
  INDEX `fk_characters_levels1_idx` (`levels_id` ASC) VISIBLE,
  CONSTRAINT `fk_characters_account1`
    FOREIGN KEY (`account_id`)
    REFERENCES `fableverse_dev`.`accounts` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_characters_servers1`
    FOREIGN KEY (`servers_id`)
    REFERENCES `fableverse_dev`.`servers` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_characters_titles1`
    FOREIGN KEY (`titles_id`)
    REFERENCES `fableverse_dev`.`titles` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_characters_races1`
    FOREIGN KEY (`races_id`)
    REFERENCES `fableverse_dev`.`races` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_characters_classes1`
    FOREIGN KEY (`classes_id`)
    REFERENCES `fableverse_dev`.`classes` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_characters_factions1`
    FOREIGN KEY (`factions_id`)
    REFERENCES `fableverse_dev`.`factions` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_characters_levels1`
    FOREIGN KEY (`levels_id`)
    REFERENCES `fableverse_dev`.`levels` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `fableverse_dev`.`characters_ammo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `fableverse_dev`.`characters_ammo` ;

CREATE TABLE IF NOT EXISTS `fableverse_dev`.`characters_ammo` (
  `characters_id` INT NOT NULL,
  `ammo_id` INT NOT NULL,
  `amount` INT NULL,
  PRIMARY KEY (`characters_id`, `ammo_id`),
  INDEX `fk_characters_has_ammo_ammo1_idx` (`ammo_id` ASC) VISIBLE,
  INDEX `fk_characters_has_ammo_characters1_idx` (`characters_id` ASC) VISIBLE,
  CONSTRAINT `fk_characters_has_ammo_characters1`
    FOREIGN KEY (`characters_id`)
    REFERENCES `fableverse_dev`.`characters` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_characters_has_ammo_ammo1`
    FOREIGN KEY (`ammo_id`)
    REFERENCES `fableverse_dev`.`ammo` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `fableverse_dev`.`characters_armor`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `fableverse_dev`.`characters_armor` ;

CREATE TABLE IF NOT EXISTS `fableverse_dev`.`characters_armor` (
  `characters_id` INT NOT NULL,
  `armor_id` INT NOT NULL,
  `amount` INT NULL,
  PRIMARY KEY (`characters_id`, `armor_id`),
  INDEX `fk_characters_has_armor_armor1_idx` (`armor_id` ASC) VISIBLE,
  INDEX `fk_characters_has_armor_characters1_idx` (`characters_id` ASC) VISIBLE,
  CONSTRAINT `fk_characters_has_armor_characters1`
    FOREIGN KEY (`characters_id`)
    REFERENCES `fableverse_dev`.`characters` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_characters_has_armor_armor1`
    FOREIGN KEY (`armor_id`)
    REFERENCES `fableverse_dev`.`armor` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `fableverse_dev`.`characters_equiped_ammo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `fableverse_dev`.`characters_equiped_ammo` ;

CREATE TABLE IF NOT EXISTS `fableverse_dev`.`characters_equiped_ammo` (
  `equipment_slots_ammo_id` INT NOT NULL,
  `characters_ammo_characters_id` INT NOT NULL,
  `characters_ammo_ammo_id` INT NOT NULL,
  PRIMARY KEY (`equipment_slots_ammo_id`, `characters_ammo_characters_id`, `characters_ammo_ammo_id`),
  INDEX `fk_equipment_slots_ammo_has_characters_has_ammo_characters__idx` (`characters_ammo_characters_id` ASC, `characters_ammo_ammo_id` ASC) VISIBLE,
  INDEX `fk_equipment_slots_ammo_has_characters_has_ammo_equipment_s_idx` (`equipment_slots_ammo_id` ASC) VISIBLE,
  CONSTRAINT `fk_equipment_slots_ammo_has_characters_has_ammo_equipment_slo1`
    FOREIGN KEY (`equipment_slots_ammo_id`)
    REFERENCES `fableverse_dev`.`equipment_slots_ammo` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_equipment_slots_ammo_has_characters_has_ammo_characters_ha1`
    FOREIGN KEY (`characters_ammo_characters_id` , `characters_ammo_ammo_id`)
    REFERENCES `fableverse_dev`.`characters_ammo` (`characters_id` , `ammo_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `fableverse_dev`.`characters_equiped_armor`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `fableverse_dev`.`characters_equiped_armor` ;

CREATE TABLE IF NOT EXISTS `fableverse_dev`.`characters_equiped_armor` (
  `equipment_slots_armor_id` INT NOT NULL,
  `characters_armor_characters_id` INT NOT NULL,
  `characters_armor_armor_id` INT NOT NULL,
  PRIMARY KEY (`equipment_slots_armor_id`, `characters_armor_characters_id`, `characters_armor_armor_id`),
  INDEX `fk_equipment_slots_armor_has_characters_has_armor_character_idx` (`characters_armor_characters_id` ASC, `characters_armor_armor_id` ASC) VISIBLE,
  INDEX `fk_equipment_slots_armor_has_characters_has_armor_equipment_idx` (`equipment_slots_armor_id` ASC) VISIBLE,
  CONSTRAINT `fk_equipment_slots_armor_has_characters_has_armor_equipment_s1`
    FOREIGN KEY (`equipment_slots_armor_id`)
    REFERENCES `fableverse_dev`.`equipment_slots_armor` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_equipment_slots_armor_has_characters_has_armor_characters_1`
    FOREIGN KEY (`characters_armor_characters_id` , `characters_armor_armor_id`)
    REFERENCES `fableverse_dev`.`characters_armor` (`characters_id` , `armor_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `fableverse_dev`.`characters_equiped_weapons`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `fableverse_dev`.`characters_equiped_weapons` ;

CREATE TABLE IF NOT EXISTS `fableverse_dev`.`characters_equiped_weapons` (
  `equipment_slots_weapons_id` INT NOT NULL,
  `characters_weapons_characters_id` INT NOT NULL,
  `characters_weapons_weapons_id` INT NOT NULL,
  PRIMARY KEY (`equipment_slots_weapons_id`, `characters_weapons_characters_id`, `characters_weapons_weapons_id`),
  INDEX `fk_equipment_slots_weapons_has_characters_has_weapons_chara_idx` (`characters_weapons_characters_id` ASC, `characters_weapons_weapons_id` ASC) VISIBLE,
  INDEX `fk_equipment_slots_weapons_has_characters_has_weapons_equip_idx` (`equipment_slots_weapons_id` ASC) VISIBLE,
  CONSTRAINT `fk_equipment_slots_weapons_has_characters_has_weapons_equipme1`
    FOREIGN KEY (`equipment_slots_weapons_id`)
    REFERENCES `fableverse_dev`.`equipment_slots_weapons` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_equipment_slots_weapons_has_characters_has_weapons_charact1`
    FOREIGN KEY (`characters_weapons_characters_id` , `characters_weapons_weapons_id`)
    REFERENCES `fableverse_dev`.`characters_weapons` (`characters_id` , `weapons_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `fableverse_dev`.`characters_items`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `fableverse_dev`.`characters_items` ;

CREATE TABLE IF NOT EXISTS `fableverse_dev`.`characters_items` (
  `characters_id` INT NOT NULL,
  `items_id` INT NOT NULL,
  `amount` INT NULL,
  PRIMARY KEY (`characters_id`, `items_id`),
  INDEX `fk_characters_has_items_items1_idx` (`items_id` ASC) VISIBLE,
  INDEX `fk_characters_has_items_characters1_idx` (`characters_id` ASC) VISIBLE,
  CONSTRAINT `fk_characters_has_items_characters1`
    FOREIGN KEY (`characters_id`)
    REFERENCES `fableverse_dev`.`characters` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_characters_has_items_items1`
    FOREIGN KEY (`items_id`)
    REFERENCES `fableverse_dev`.`items` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `fableverse_dev`.`characters_potions`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `fableverse_dev`.`characters_potions` ;

CREATE TABLE IF NOT EXISTS `fableverse_dev`.`characters_potions` (
  `characters_id` INT NOT NULL,
  `potions_id` INT NOT NULL,
  `amount` INT NULL,
  PRIMARY KEY (`characters_id`, `potions_id`),
  INDEX `fk_characters_has_potions_potions1_idx` (`potions_id` ASC) VISIBLE,
  INDEX `fk_characters_has_potions_characters1_idx` (`characters_id` ASC) VISIBLE,
  CONSTRAINT `fk_characters_has_potions_characters1`
    FOREIGN KEY (`characters_id`)
    REFERENCES `fableverse_dev`.`characters` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_characters_has_potions_potions1`
    FOREIGN KEY (`potions_id`)
    REFERENCES `fableverse_dev`.`potions` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `fableverse_dev`.`characters_weapons`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `fableverse_dev`.`characters_weapons` ;

CREATE TABLE IF NOT EXISTS `fableverse_dev`.`characters_weapons` (
  `characters_id` INT NOT NULL,
  `weapons_id` INT NOT NULL,
  `amount` INT NULL,
  PRIMARY KEY (`characters_id`, `weapons_id`),
  INDEX `fk_characters_has_weapons_weapons1_idx` (`weapons_id` ASC) VISIBLE,
  INDEX `fk_characters_has_weapons_characters1_idx` (`characters_id` ASC) VISIBLE,
  CONSTRAINT `fk_characters_has_weapons_characters1`
    FOREIGN KEY (`characters_id`)
    REFERENCES `fableverse_dev`.`characters` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_characters_has_weapons_weapons1`
    FOREIGN KEY (`weapons_id`)
    REFERENCES `fableverse_dev`.`weapons` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `fableverse_dev`.`classes`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `fableverse_dev`.`classes` ;

CREATE TABLE IF NOT EXISTS `fableverse_dev`.`classes` (
  `id` INT NOT NULL,
  `servers_id` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  `description` TEXT(1000) NULL,
  `strength_boost` INT NULL,
  `intelligence_boost` INT NULL,
  `luck_boost` INT NULL,
  `dexterity_boost` INT NULL,
  `constitution_boost` INT NULL,
  `charisma_boost` INT NULL,
  PRIMARY KEY (`id`, `servers_id`),
  INDEX `fk_classes_servers1_idx` (`servers_id` ASC) VISIBLE,
  CONSTRAINT `fk_classes_servers1`
    FOREIGN KEY (`servers_id`)
    REFERENCES `fableverse_dev`.`servers` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `fableverse_dev`.`classes_has_abilities`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `fableverse_dev`.`classes_has_abilities` ;

CREATE TABLE IF NOT EXISTS `fableverse_dev`.`classes_has_abilities` (
  `classes_id` INT NOT NULL,
  `abilities_id` INT NOT NULL,
  PRIMARY KEY (`classes_id`, `abilities_id`),
  INDEX `fk_classes_has_abilities_abilities1_idx` (`abilities_id` ASC) VISIBLE,
  INDEX `fk_classes_has_abilities_classes1_idx` (`classes_id` ASC) VISIBLE,
  CONSTRAINT `fk_classes_has_abilities_classes1`
    FOREIGN KEY (`classes_id`)
    REFERENCES `fableverse_dev`.`classes` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_classes_has_abilities_abilities1`
    FOREIGN KEY (`abilities_id`)
    REFERENCES `fableverse_dev`.`abilities` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `fableverse_dev`.`equipment_slots_ammo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `fableverse_dev`.`equipment_slots_ammo` ;

CREATE TABLE IF NOT EXISTS `fableverse_dev`.`equipment_slots_ammo` (
  `id` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  `servers_id` INT NOT NULL,
  PRIMARY KEY (`id`, `servers_id`),
  INDEX `fk_equipment_slots_ammo_servers1_idx` (`servers_id` ASC) VISIBLE,
  CONSTRAINT `fk_equipment_slots_ammo_servers1`
    FOREIGN KEY (`servers_id`)
    REFERENCES `fableverse_dev`.`servers` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `fableverse_dev`.`equipment_slots_armor`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `fableverse_dev`.`equipment_slots_armor` ;

CREATE TABLE IF NOT EXISTS `fableverse_dev`.`equipment_slots_armor` (
  `id` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  `servers_id` INT NOT NULL,
  PRIMARY KEY (`id`, `servers_id`),
  INDEX `fk_equipment_slots_armor_servers1_idx` (`servers_id` ASC) VISIBLE,
  CONSTRAINT `fk_equipment_slots_armor_servers1`
    FOREIGN KEY (`servers_id`)
    REFERENCES `fableverse_dev`.`servers` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `fableverse_dev`.`equipment_slots_weapons`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `fableverse_dev`.`equipment_slots_weapons` ;

CREATE TABLE IF NOT EXISTS `fableverse_dev`.`equipment_slots_weapons` (
  `id` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  `servers_id` INT NOT NULL,
  PRIMARY KEY (`id`, `servers_id`),
  INDEX `fk_equipment_slots_weapons_servers1_idx` (`servers_id` ASC) VISIBLE,
  CONSTRAINT `fk_equipment_slots_weapons_servers1`
    FOREIGN KEY (`servers_id`)
    REFERENCES `fableverse_dev`.`servers` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `fableverse_dev`.`factions`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `fableverse_dev`.`factions` ;

CREATE TABLE IF NOT EXISTS `fableverse_dev`.`factions` (
  `id` INT NOT NULL,
  `servers_id` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  PRIMARY KEY (`id`, `servers_id`),
  INDEX `fk_titles_servers1_idx` (`servers_id` ASC) VISIBLE,
  CONSTRAINT `fk_titles_servers10`
    FOREIGN KEY (`servers_id`)
    REFERENCES `fableverse_dev`.`servers` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `fableverse_dev`.`items`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `fableverse_dev`.`items` ;

CREATE TABLE IF NOT EXISTS `fableverse_dev`.`items` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `servers_id` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `description` VARCHAR(255) NULL,
  `type` VARCHAR(10) NULL,
  `quest_item` INT NULL,
  PRIMARY KEY (`id`, `servers_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `fk_items_servers1_idx` (`servers_id` ASC) VISIBLE,
  CONSTRAINT `fk_items_servers1`
    FOREIGN KEY (`servers_id`)
    REFERENCES `fableverse_dev`.`servers` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `fableverse_dev`.`levels`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `fableverse_dev`.`levels` ;

CREATE TABLE IF NOT EXISTS `fableverse_dev`.`levels` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `servers_id` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  `description` TEXT(1000) NULL,
  `assets_image_id` INT NOT NULL,
  `assets_preview_image_id` INT NOT NULL,
  PRIMARY KEY (`id`, `servers_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE,
  INDEX `fk_assets_servers1_idx` (`servers_id` ASC) VISIBLE,
  INDEX `fk_levels_assets1_idx` (`assets_image_id` ASC) VISIBLE,
  INDEX `fk_levels_assets2_idx` (`assets_preview_image_id` ASC) VISIBLE,
  CONSTRAINT `fk_assets_servers11`
    FOREIGN KEY (`servers_id`)
    REFERENCES `fableverse_dev`.`servers` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_levels_assets1`
    FOREIGN KEY (`assets_image_id`)
    REFERENCES `fableverse_dev`.`assets` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_levels_assets2`
    FOREIGN KEY (`assets_preview_image_id`)
    REFERENCES `fableverse_dev`.`assets` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `fableverse_dev`.`levels_connections`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `fableverse_dev`.`levels_connections` ;

CREATE TABLE IF NOT EXISTS `fableverse_dev`.`levels_connections` (
  `levels_id` INT NOT NULL,
  `levels_connects_to_id` INT NOT NULL,
  `direction` VARCHAR(2) NULL,
  PRIMARY KEY (`levels_id`, `levels_connects_to_id`),
  INDEX `fk_levels_has_levels_levels2_idx` (`levels_connects_to_id` ASC) VISIBLE,
  INDEX `fk_levels_has_levels_levels1_idx` (`levels_id` ASC) VISIBLE,
  CONSTRAINT `fk_levels_has_levels_levels1`
    FOREIGN KEY (`levels_id`)
    REFERENCES `fableverse_dev`.`levels` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_levels_has_levels_levels2`
    FOREIGN KEY (`levels_connects_to_id`)
    REFERENCES `fableverse_dev`.`levels` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `fableverse_dev`.`levels_has_npcs`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `fableverse_dev`.`levels_has_npcs` ;

CREATE TABLE IF NOT EXISTS `fableverse_dev`.`levels_has_npcs` (
  `levels_id` INT NOT NULL,
  `npcs_id` INT NOT NULL,
  `chance_of_spawn` INT NULL,
  `loot_table_id` INT NULL,
  `chance_for_loot` FLOAT(4,4) NULL,
  PRIMARY KEY (`levels_id`, `npcs_id`),
  INDEX `fk_levels_has_npcs_npcs1_idx` (`npcs_id` ASC) VISIBLE,
  INDEX `fk_levels_has_npcs_levels1_idx` (`levels_id` ASC) VISIBLE,
  INDEX `fk_levels_has_npcs_loot_table1_idx` (`loot_table_id` ASC) VISIBLE,
  CONSTRAINT `fk_levels_has_npcs_levels1`
    FOREIGN KEY (`levels_id`)
    REFERENCES `fableverse_dev`.`levels` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_levels_has_npcs_npcs1`
    FOREIGN KEY (`npcs_id`)
    REFERENCES `fableverse_dev`.`npcs` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_levels_has_npcs_loot_table1`
    FOREIGN KEY (`loot_table_id`)
    REFERENCES `fableverse_dev`.`loot_table` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `fableverse_dev`.`loot_table`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `fableverse_dev`.`loot_table` ;

CREATE TABLE IF NOT EXISTS `fableverse_dev`.`loot_table` (
  `id` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `fableverse_dev`.`loot_table_has_ammo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `fableverse_dev`.`loot_table_has_ammo` ;

CREATE TABLE IF NOT EXISTS `fableverse_dev`.`loot_table_has_ammo` (
  `loot_table_id` INT NOT NULL,
  `ammo_id` INT NOT NULL,
  `chance` FLOAT(4,4) NULL,
  PRIMARY KEY (`loot_table_id`, `ammo_id`),
  INDEX `fk_loot_table_has_ammo_ammo1_idx` (`ammo_id` ASC) VISIBLE,
  INDEX `fk_loot_table_has_ammo_loot_table1_idx` (`loot_table_id` ASC) VISIBLE,
  CONSTRAINT `fk_loot_table_has_ammo_loot_table1`
    FOREIGN KEY (`loot_table_id`)
    REFERENCES `fableverse_dev`.`loot_table` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_loot_table_has_ammo_ammo1`
    FOREIGN KEY (`ammo_id`)
    REFERENCES `fableverse_dev`.`ammo` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `fableverse_dev`.`loot_table_has_armor`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `fableverse_dev`.`loot_table_has_armor` ;

CREATE TABLE IF NOT EXISTS `fableverse_dev`.`loot_table_has_armor` (
  `loot_table_id` INT NOT NULL,
  `armor_id` INT NOT NULL,
  `chance` FLOAT(4,4) NULL,
  PRIMARY KEY (`loot_table_id`, `armor_id`),
  INDEX `fk_loot_table_has_armor_armor1_idx` (`armor_id` ASC) VISIBLE,
  INDEX `fk_loot_table_has_armor_loot_table1_idx` (`loot_table_id` ASC) VISIBLE,
  CONSTRAINT `fk_loot_table_has_armor_loot_table1`
    FOREIGN KEY (`loot_table_id`)
    REFERENCES `fableverse_dev`.`loot_table` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_loot_table_has_armor_armor1`
    FOREIGN KEY (`armor_id`)
    REFERENCES `fableverse_dev`.`armor` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `fableverse_dev`.`loot_table_has_items`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `fableverse_dev`.`loot_table_has_items` ;

CREATE TABLE IF NOT EXISTS `fableverse_dev`.`loot_table_has_items` (
  `loot_table_id` INT NOT NULL,
  `items_id` INT NOT NULL,
  `chance` FLOAT(4,4) NULL,
  PRIMARY KEY (`loot_table_id`, `items_id`),
  INDEX `fk_loot_table_has_items_items1_idx` (`items_id` ASC) VISIBLE,
  INDEX `fk_loot_table_has_items_loot_table1_idx` (`loot_table_id` ASC) VISIBLE,
  CONSTRAINT `fk_loot_table_has_items_loot_table1`
    FOREIGN KEY (`loot_table_id`)
    REFERENCES `fableverse_dev`.`loot_table` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_loot_table_has_items_items1`
    FOREIGN KEY (`items_id`)
    REFERENCES `fableverse_dev`.`items` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `fableverse_dev`.`loot_table_has_potions`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `fableverse_dev`.`loot_table_has_potions` ;

CREATE TABLE IF NOT EXISTS `fableverse_dev`.`loot_table_has_potions` (
  `loot_table_id` INT NOT NULL,
  `potions_id` INT NOT NULL,
  `chance` FLOAT(4,4) NULL,
  PRIMARY KEY (`loot_table_id`, `potions_id`),
  INDEX `fk_loot_table_has_potions_potions1_idx` (`potions_id` ASC) VISIBLE,
  INDEX `fk_loot_table_has_potions_loot_table1_idx` (`loot_table_id` ASC) VISIBLE,
  CONSTRAINT `fk_loot_table_has_potions_loot_table1`
    FOREIGN KEY (`loot_table_id`)
    REFERENCES `fableverse_dev`.`loot_table` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_loot_table_has_potions_potions1`
    FOREIGN KEY (`potions_id`)
    REFERENCES `fableverse_dev`.`potions` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `fableverse_dev`.`loot_table_has_weapons`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `fableverse_dev`.`loot_table_has_weapons` ;

CREATE TABLE IF NOT EXISTS `fableverse_dev`.`loot_table_has_weapons` (
  `loot_table_id` INT NOT NULL,
  `weapons_id` INT NOT NULL,
  `chance` FLOAT(4,4) NULL,
  PRIMARY KEY (`loot_table_id`, `weapons_id`),
  INDEX `fk_loot_table_has_weapons_weapons1_idx` (`weapons_id` ASC) VISIBLE,
  INDEX `fk_loot_table_has_weapons_loot_table1_idx` (`loot_table_id` ASC) VISIBLE,
  CONSTRAINT `fk_loot_table_has_weapons_loot_table1`
    FOREIGN KEY (`loot_table_id`)
    REFERENCES `fableverse_dev`.`loot_table` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_loot_table_has_weapons_weapons1`
    FOREIGN KEY (`weapons_id`)
    REFERENCES `fableverse_dev`.`weapons` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `fableverse_dev`.`npcs`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `fableverse_dev`.`npcs` ;

CREATE TABLE IF NOT EXISTS `fableverse_dev`.`npcs` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `servers_id` INT NOT NULL,
  `weapons_id` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  `description` VARCHAR(255) NULL,
  `health` VARCHAR(45) NULL,
  `money_on_kill` INT NULL,
  `experience_on_kill` INT NULL,
  PRIMARY KEY (`id`, `servers_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE,
  INDEX `fk_assets_servers1_idx` (`servers_id` ASC) VISIBLE,
  INDEX `fk_npcs_weapons1_idx` (`weapons_id` ASC) VISIBLE,
  CONSTRAINT `fk_assets_servers10`
    FOREIGN KEY (`servers_id`)
    REFERENCES `fableverse_dev`.`servers` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_npcs_weapons1`
    FOREIGN KEY (`weapons_id`)
    REFERENCES `fableverse_dev`.`weapons` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `fableverse_dev`.`npcs_has_abilities`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `fableverse_dev`.`npcs_has_abilities` ;

CREATE TABLE IF NOT EXISTS `fableverse_dev`.`npcs_has_abilities` (
  `npcs_id` INT NOT NULL,
  `abilities_id` INT NOT NULL,
  PRIMARY KEY (`npcs_id`, `abilities_id`),
  INDEX `fk_npcs_has_abilities_abilities1_idx` (`abilities_id` ASC) VISIBLE,
  INDEX `fk_npcs_has_abilities_npcs1_idx` (`npcs_id` ASC) VISIBLE,
  CONSTRAINT `fk_npcs_has_abilities_npcs1`
    FOREIGN KEY (`npcs_id`)
    REFERENCES `fableverse_dev`.`npcs` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_npcs_has_abilities_abilities1`
    FOREIGN KEY (`abilities_id`)
    REFERENCES `fableverse_dev`.`abilities` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `fableverse_dev`.`npcs_has_armor`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `fableverse_dev`.`npcs_has_armor` ;

CREATE TABLE IF NOT EXISTS `fableverse_dev`.`npcs_has_armor` (
  `npcs_id` INT NOT NULL,
  `armor_id` INT NOT NULL,
  PRIMARY KEY (`npcs_id`, `armor_id`),
  INDEX `fk_npcs_has_armor_armor1_idx` (`armor_id` ASC) VISIBLE,
  INDEX `fk_npcs_has_armor_npcs1_idx` (`npcs_id` ASC) VISIBLE,
  CONSTRAINT `fk_npcs_has_armor_npcs1`
    FOREIGN KEY (`npcs_id`)
    REFERENCES `fableverse_dev`.`npcs` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_npcs_has_armor_armor1`
    FOREIGN KEY (`armor_id`)
    REFERENCES `fableverse_dev`.`armor` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `fableverse_dev`.`potions`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `fableverse_dev`.`potions` ;

CREATE TABLE IF NOT EXISTS `fableverse_dev`.`potions` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `servers_id` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `description` VARCHAR(255) NULL,
  `type` VARCHAR(24) NULL,
  `amount` INT NULL,
  `status_effect_id` INT NOT NULL,
  PRIMARY KEY (`id`, `servers_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `fk_potions_servers1_idx` (`servers_id` ASC) VISIBLE,
  INDEX `fk_potions_status_effect1_idx` (`status_effect_id` ASC) VISIBLE,
  CONSTRAINT `fk_potions_servers1`
    FOREIGN KEY (`servers_id`)
    REFERENCES `fableverse_dev`.`servers` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_potions_status_effect1`
    FOREIGN KEY (`status_effect_id`)
    REFERENCES `fableverse_dev`.`status_effect` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `fableverse_dev`.`races`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `fableverse_dev`.`races` ;

CREATE TABLE IF NOT EXISTS `fableverse_dev`.`races` (
  `id` INT NOT NULL,
  `servers_id` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  `description` TEXT(1000) NULL,
  `strength_boost` INT NULL,
  `intelligence_boost` INT NULL,
  `luck_boost` INT NULL,
  `dexterity_boost` INT NULL,
  `constitution_boost` INT NULL,
  `charisma_boost` INT NULL,
  PRIMARY KEY (`id`, `servers_id`),
  INDEX `fk_races_servers1_idx` (`servers_id` ASC) VISIBLE,
  CONSTRAINT `fk_races_servers1`
    FOREIGN KEY (`servers_id`)
    REFERENCES `fableverse_dev`.`servers` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `fableverse_dev`.`races_has_abilities`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `fableverse_dev`.`races_has_abilities` ;

CREATE TABLE IF NOT EXISTS `fableverse_dev`.`races_has_abilities` (
  `races_id` INT NOT NULL,
  `abilities_id` INT NOT NULL,
  PRIMARY KEY (`races_id`, `abilities_id`),
  INDEX `fk_races_has_abilities_abilities1_idx` (`abilities_id` ASC) VISIBLE,
  INDEX `fk_races_has_abilities_races1_idx` (`races_id` ASC) VISIBLE,
  CONSTRAINT `fk_races_has_abilities_races1`
    FOREIGN KEY (`races_id`)
    REFERENCES `fableverse_dev`.`races` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_races_has_abilities_abilities1`
    FOREIGN KEY (`abilities_id`)
    REFERENCES `fableverse_dev`.`abilities` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `fableverse_dev`.`relationships`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `fableverse_dev`.`relationships` ;

CREATE TABLE IF NOT EXISTS `fableverse_dev`.`relationships` (
  `characters_id` INT NOT NULL,
  `related_characters_id` INT NOT NULL,
  `relationship_type` VARCHAR(30) NULL,
  PRIMARY KEY (`characters_id`, `related_characters_id`),
  INDEX `fk_relationships_characters2_idx` (`related_characters_id` ASC) VISIBLE,
  CONSTRAINT `fk_relationships_characters1`
    FOREIGN KEY (`characters_id`)
    REFERENCES `fableverse_dev`.`characters` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_relationships_characters2`
    FOREIGN KEY (`related_characters_id`)
    REFERENCES `fableverse_dev`.`characters` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `fableverse_dev`.`servers`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `fableverse_dev`.`servers` ;

CREATE TABLE IF NOT EXISTS `fableverse_dev`.`servers` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `account_id` INT NOT NULL,
  `server_name` VARCHAR(45) NULL,
  `status` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `fk_servers_account1_idx` (`account_id` ASC) VISIBLE,
  CONSTRAINT `fk_servers_account1`
    FOREIGN KEY (`account_id`)
    REFERENCES `fableverse_dev`.`accounts` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `fableverse_dev`.`status_effect`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `fableverse_dev`.`status_effect` ;

CREATE TABLE IF NOT EXISTS `fableverse_dev`.`status_effect` (
  `id` INT NOT NULL,
  `servers_id` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  `description` VARCHAR(255) NULL,
  `effect_type` INT NULL,
  `duration_in_turns` INT NULL,
  PRIMARY KEY (`id`, `servers_id`),
  INDEX `fk_titles_servers1_idx` (`servers_id` ASC) VISIBLE,
  CONSTRAINT `fk_titles_servers11`
    FOREIGN KEY (`servers_id`)
    REFERENCES `fableverse_dev`.`servers` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `fableverse_dev`.`titles`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `fableverse_dev`.`titles` ;

CREATE TABLE IF NOT EXISTS `fableverse_dev`.`titles` (
  `id` INT NOT NULL,
  `servers_id` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  `description` TEXT(500) NULL,
  PRIMARY KEY (`id`, `servers_id`),
  INDEX `fk_titles_servers1_idx` (`servers_id` ASC) VISIBLE,
  CONSTRAINT `fk_titles_servers1`
    FOREIGN KEY (`servers_id`)
    REFERENCES `fableverse_dev`.`servers` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `fableverse_dev`.`weapons`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `fableverse_dev`.`weapons` ;

CREATE TABLE IF NOT EXISTS `fableverse_dev`.`weapons` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `servers_id` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `description` VARCHAR(255) NULL,
  `type` VARCHAR(10) NULL,
  `damage` INT NULL,
  `magic_damage` INT NULL,
  `armor_penetration` INT NULL,
  `attack_speed` INT NULL,
  `crit_chance` INT NULL,
  `crit_power` INT NULL,
  `weight` INT NULL,
  `needs_ammo` INT NULL,
  `status_effect_chance` FLOAT(4,4) NULL,
  `status_effect_id` INT NOT NULL,
  PRIMARY KEY (`id`, `servers_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `fk_weapons_servers1_idx` (`servers_id` ASC) VISIBLE,
  INDEX `fk_weapons_status_effect1_idx` (`status_effect_id` ASC) VISIBLE,
  CONSTRAINT `fk_weapons_servers1`
    FOREIGN KEY (`servers_id`)
    REFERENCES `fableverse_dev`.`servers` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_weapons_status_effect1`
    FOREIGN KEY (`status_effect_id`)
    REFERENCES `fableverse_dev`.`status_effect` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `fableverse_dev`.`weapons_has_ammo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `fableverse_dev`.`weapons_has_ammo` ;

CREATE TABLE IF NOT EXISTS `fableverse_dev`.`weapons_has_ammo` (
  `weapons_id` INT NOT NULL,
  `ammo_id` INT NOT NULL,
  PRIMARY KEY (`weapons_id`, `ammo_id`),
  INDEX `fk_weapons_has_ammo_ammo1_idx` (`ammo_id` ASC) VISIBLE,
  INDEX `fk_weapons_has_ammo_weapons1_idx` (`weapons_id` ASC) VISIBLE,
  CONSTRAINT `fk_weapons_has_ammo_weapons1`
    FOREIGN KEY (`weapons_id`)
    REFERENCES `fableverse_dev`.`weapons` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_weapons_has_ammo_ammo1`
    FOREIGN KEY (`ammo_id`)
    REFERENCES `fableverse_dev`.`ammo` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
